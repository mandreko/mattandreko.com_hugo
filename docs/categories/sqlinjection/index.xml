<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sqlinjection on Matt Andreko</title>
    <link>https://www.mattandreko.com/categories/sqlinjection/</link>
    <description>Recent content in Sqlinjection on Matt Andreko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 14 Nov 2012 06:29:00 -0500</lastBuildDate>
    
	<atom:link href="https://www.mattandreko.com/categories/sqlinjection/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OverTheWire Natas Level 15</title>
      <link>https://www.mattandreko.com/2012/11/14/overthewire-natas-level-15/</link>
      <pubDate>Wed, 14 Nov 2012 06:29:00 -0500</pubDate>
      
      <guid>https://www.mattandreko.com/2012/11/14/overthewire-natas-level-15/</guid>
      <description>Up until now, none of the OverTheWire Natas challenges really gave me that much of an issue. This one however, took me a couple hours to complete. Level 15 is a fun blind sql-injection vulnerability.
It starts out with a username check dialog, which pretty much only gives you a binary value as to if a username exists or not.
 I looked at the source code, and couldn&amp;rsquo;t see any way to inject some SQL to get it to retrieve the password for me.</description>
    </item>
    
    <item>
      <title>OverTheWire Natas Level 14</title>
      <link>https://www.mattandreko.com/2012/11/13/overthewire-natas-level-14/</link>
      <pubDate>Tue, 13 Nov 2012 05:08:00 -0500</pubDate>
      
      <guid>https://www.mattandreko.com/2012/11/13/overthewire-natas-level-14/</guid>
      <description>The next level of the OverTheWire Natas wargame is Level 14, which introduces SQL Injection, a very popular subject as of late.
The level starts out with a login dialog.
 The source code is fairly straight forward. It&amp;rsquo;s doing a basic authentication query. It however, does have a handy &amp;ldquo;debug&amp;rdquo; flag, that if set, will print the query used to the screen.
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;http://www.overthewire.org/wargames/natas/level.css&amp;quot;&amp;gt;&amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;natas14&amp;lt;/h1&amp;gt; &amp;lt;div id=&amp;quot;content&amp;quot;&amp;gt; &amp;lt;?</description>
    </item>
    
  </channel>
</rss>