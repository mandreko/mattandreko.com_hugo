<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Encoding on Matt Andreko</title>
    <link>http://test.andreko.net/categories/encoding/index.xml</link>
    <description>Recent content in Encoding on Matt Andreko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <atom:link href="http://test.andreko.net/categories/encoding/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OverTheWire Natas Level 8</title>
      <link>http://test.andreko.net/2012/11/07/overthewire-natas-level-8/</link>
      <pubDate>Wed, 07 Nov 2012 05:56:00 -0500</pubDate>
      
      <guid>http://test.andreko.net/2012/11/07/overthewire-natas-level-8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.overthewire.org/wargames/natas/natas8.shtml&#34;&gt;Level 8&lt;/a&gt; of the &lt;a href=&#34;http://www.overthewire.org&#34;&gt;OverTheWires&lt;/a&gt; Natas wargame was pretty simple, as a developer, but could prove more difficult if you don&amp;rsquo;t have similar background.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;It starts out with a secret password input.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;http://test.andreko.net/img/natas8_1.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Like other levels, I looked at the source code to see what was going on in the background.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;http://test.andreko.net/img/natas8_2.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Based on this code, you can see that it has a stored secret value, that is base64 encoded, then reversed, and then converted to a hex string. That value is then compared to the stored secret value, and if it&amp;rsquo;s a match, it will give you the next level&amp;rsquo;s password.&lt;/p&gt;

&lt;p&gt;I decided to write a reversal program in php, since it was super easy. The only problem it gave me, was that there is no built-in hex2bin method until a newer version of PHP than I had on my machine. Luckily, on the &lt;a href=&#34;http://www.php.net/manual/en/function.bin2hex.php&#34;&gt;bin2hex&lt;/a&gt; documentation page, someone kindly wrote a reversal function that I stole.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;http://test.andreko.net/img/natas8_3.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Once I executed that program in php, it gave me the decoded password. Once I entered it into the page, it gave me the password to the next level.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;http://test.andreko.net/img/natas8_4.png&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
  </channel>
</rss>