<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metasploit on Matt Andreko</title>
    <link>http://test.andreko.net/categories/metasploit/</link>
    <description>Recent content in Metasploit on Matt Andreko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 13 Jan 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://test.andreko.net/categories/metasploit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Backdoor Modules for Netgear, Linksys, and Other Routers</title>
      <link>http://test.andreko.net/2014/01/13/backdoor-modules-for-netgear-linksys-and-other-routers/</link>
      <pubDate>Mon, 13 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://test.andreko.net/2014/01/13/backdoor-modules-for-netgear-linksys-and-other-routers/</guid>
      <description>A week or so ago, I read the news of a new backdoor on several devices, including those made by Belkin, Cisco, NetGear, Linksys, and several others. A list of what seems to be affected devices can be found here. Eloi Vanderbeken, who posted his findings on GitHub made the original discovery. He also wrote a useful python proof-of-concept exploit, which allowed command injection, but I wanted Metasploit integration.</description>
    </item>
    
    <item>
      <title>Sysax Multi Server 6.10 SSH DoS</title>
      <link>http://test.andreko.net/2013/04/08/sysax-multi-server-6.10-ssh-dos/</link>
      <pubDate>Mon, 08 Apr 2013 08:27:00 -0400</pubDate>
      
      <guid>http://test.andreko.net/2013/04/08/sysax-multi-server-6.10-ssh-dos/</guid>
      <description>I was recently fuzzing a bunch of SSH servers, hoping to find some remote code execution in a non-mainstream server. I ended up finding no code execution in the several that I tried, but I did find one pre-auth denial of service in Syax Multi Server 6.10.
Try this at home! The vulnerable version can be downloaded here for anyone that would like to duplicate the DoS conditions.
Understanding the Key Exchange I found that during the key exchange, where the SSH client and SSH server negotiate which ciphers to use, if you messed up just a single specific byte, the server would crash.</description>
    </item>
    
    <item>
      <title>XBMC Traversal Metasploit Module</title>
      <link>http://test.andreko.net/2013/02/25/xbmc-traversal-metasploit-module/</link>
      <pubDate>Mon, 25 Feb 2013 15:32:00 -0500</pubDate>
      
      <guid>http://test.andreko.net/2013/02/25/xbmc-traversal-metasploit-module/</guid>
      <description>Background I was talking in Intern0t several months ago. AcidGen, from IOActive mentioned that he found a bug in XBMC. I use XBMC quite a bit at home, on various platforms, since it&amp;rsquo;s extremely wife-friendly. I hit him up, and we started talking. We had a nice Skype conversation, where we discussed possible platforms that were affected, and future exploits that we&amp;rsquo;d like to find. Since I had a jailbroken Apple TV 2 and RaspberryPi, I told him that I could test those platforms and help out.</description>
    </item>
    
    <item>
      <title>HSTS Metasploit Module</title>
      <link>http://test.andreko.net/2013/02/21/hsts-metasploit-module/</link>
      <pubDate>Thu, 21 Feb 2013 13:20:00 -0500</pubDate>
      
      <guid>http://test.andreko.net/2013/02/21/hsts-metasploit-module/</guid>
      <description>I have been working as a security consultant for a few months now, and one finding that is on almost every webserver I come across, is the lack of an HSTS (HTTP Strict Transport Security) implementation. This is understandable, since HSTS is still fairly new. In fact, before starting at Accuvant, I had never heard of it either! However, since most browsers support it now, I wanted to be able to report on it.</description>
    </item>
    
    <item>
      <title>Sysax 5.64 HTTP Remote Buffer Overflow</title>
      <link>http://test.andreko.net/2012/07/28/sysax-5.64-http-remote-buffer-overflow/</link>
      <pubDate>Sat, 28 Jul 2012 22:56:00 -0400</pubDate>
      
      <guid>http://test.andreko.net/2012/07/28/sysax-5.64-http-remote-buffer-overflow/</guid>
      <description>I have discovered a bug in the Sysax Multi-Server application. More specifically, it&amp;rsquo;s in the HTTP File Server service, which is not enabled by default. It has to be turned on by the admin for this exploit to properly function. The user in question also needs permission to create a directory.
In the Sysax service, the configuration would look like this:
 To trigger this vulnerability is pretty simple. Log into the HTTP File Server:</description>
    </item>
    
  </channel>
</rss>